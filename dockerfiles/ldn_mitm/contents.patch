diff --git a/source/cfg/cfg_flags.cpp b/source/cfg/cfg_flags.cpp
index 48b8ef6..7d29569 100644
--- a/source/cfg/cfg_flags.cpp
+++ b/source/cfg/cfg_flags.cpp
@@ -55,7 +55,7 @@ namespace sts::cfg {
 
     bool HasTitleSpecificFlag(ncm::TitleId title_id, const char *flag) {
         char title_flag[FS_MAX_PATH];
-        std::snprintf(title_flag, sizeof(title_flag) - 1, "/atmosphere/titles/%016lx/flags/%s.flag", static_cast<u64>(title_id), flag);
+        std::snprintf(title_flag, sizeof(title_flag) - 1, "/atmosphere/contents/%016lx/flags/%s.flag", static_cast<u64>(title_id), flag);
         return HasFlagFile(title_flag);
     }
 
diff --git a/source/cfg/cfg_override.cpp b/source/cfg/cfg_override.cpp
index 4a84ea0..9bded70 100644
--- a/source/cfg/cfg_override.cpp
+++ b/source/cfg/cfg_override.cpp
@@ -195,12 +195,12 @@ namespace sts::cfg {
         }
 
         void RefreshLoaderConfiguration() {
-            ParseIniFile(LoaderIniHandler, "/atmosphere/loader.ini", nullptr);
+            ParseIniFile(LoaderIniHandler, "/atmosphere/config/override_config.ini", nullptr);
         }
 
         TitleSpecificOverrideConfig GetTitleOverrideConfig(ncm::TitleId title_id) {
             char path[FS_MAX_PATH];
-            std::snprintf(path, sizeof(path) - 1, "/atmosphere/titles/%016lx/config.ini", static_cast<u64>(title_id));
+            std::snprintf(path, sizeof(path) - 1, "/atmosphere/contents/%016lx/config.ini", static_cast<u64>(title_id));
 
             TitleSpecificOverrideConfig config = {
                 .override_key = g_default_override_key,
@@ -223,7 +223,7 @@ namespace sts::cfg {
             return true;
         }
 
-        /* Unconditionally refresh loader.ini contents. */
+        /* Unconditionally refresh config/override_config.ini contents. */
         RefreshLoaderConfiguration();
 
         /* Check HBL config. */
@@ -241,7 +241,7 @@ namespace sts::cfg {
             return true;
         }
 
-        /* Unconditionally refresh loader.ini contents. */
+        /* Unconditionally refresh config/override_config.ini contents. */
         RefreshLoaderConfiguration();
 
         TitleSpecificOverrideConfig title_cfg = GetTitleOverrideConfig(title_id);
@@ -264,7 +264,7 @@ namespace sts::cfg {
             return;
         }
 
-        /* Unconditionally refresh loader.ini contents. */
+        /* Unconditionally refresh config/override_config.ini contents. */
         RefreshLoaderConfiguration();
 
         /* Set HBL output. */
